{"version":3,"file":"pfe-health-index.umd.min.js","sources":["pfe-health-index.js"],"sourcesContent":["import PFElement from '../pfelement/pfelement.js';\n\n/*!\n * PatternFly Elements: PfeHealthIndex 1.0.0-prerelease.24\n * @license\n * Copyright 2019 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nclass PfeHealthIndex extends PFElement {\n  static get version() {\n    return \"1.0.0-prerelease.24\";\n  }\n\n  get html() {\n    return `<style>:host{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}:host([hidden]){display:none}.box-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;border:1px solid #dfdfdf;border:1px solid var(--pfe-theme--color--surface--border,#dfdfdf);margin-left:calc(1rem * .5);margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .5)}.box-container .box{background:#fff;width:10px;height:20px;border-right:1px solid #dfdfdf;border-right:1px solid var(--pfe-theme--color--surface--border,#dfdfdf)}.box-container .box:last-child{border-right:0}.box-container .box.active.a{background-color:#3f9c35}.box-container .box.active.b{background-color:#92d400}.box-container .box.active.c{background-color:#efaa00}.box-container .box.active.d{background-color:#ec7a08}.box-container .box.active.e{background-color:#c00}.box-container .box.active.f{background-color:#a30000}</style><div id=\"healthIndex\"></div>\n<div class=\"box-container\">\n  <div class=\"box a\"></div>\n  <div class=\"box b\"></div>\n  <div class=\"box c\"></div>\n  <div class=\"box d\"></div>\n  <div class=\"box e\"></div>\n  <div class=\"box f\"></div>\n</div>`;\n  }\n  static get tag() {\n    return \"pfe-health-index\";\n  }\n\n  get templateUrl() {\n    return \"pfe-health-index.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-health-index.scss\";\n  }\n\n  static get observedAttributes() {\n    return [\"health-index\"];\n  }\n\n  constructor() {\n    super(PfeHealthIndex);\n  }\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    const healthIndex = newValue.toLowerCase();\n    const healthIndexUpperCase = newValue.toUpperCase();\n    const boxes = [...this.shadowRoot.querySelectorAll(\".box\")];\n\n    this.innerHTML = healthIndexUpperCase;\n    this.shadowRoot.querySelector(\n      \"#healthIndex\"\n    ).innerText = healthIndexUpperCase;\n\n    boxes.forEach(box => {\n      if (box.classList.contains(healthIndex)) {\n        box.classList.add(\"active\");\n      } else {\n        box.classList.remove(\"active\");\n      }\n    });\n\n    if (!this.shadowRoot.querySelector(\".box.active\")) {\n      console.warn(\n        `${\n          PfeHealthIndex.tag\n        }: a valid health-index was not provided. Please use A, B, C, D, E, or F`\n      );\n    }\n  }\n}\n\nPFElement.create(PfeHealthIndex);\n\nexport default PfeHealthIndex;\n//# sourceMappingURL=pfe-health-index.js.map\n"],"names":["PfeHealthIndex","PFElement","attr","oldValue","newValue","healthIndex","toLowerCase","healthIndexUpperCase","toUpperCase","boxes","this","shadowRoot","querySelectorAll","innerHTML","querySelector","innerText","forEach","box","classList","contains","add","remove","warn","tag","create"],"mappings":"uiBA2BMA,+TAAuBC,01CAqBlB,+DAIA,gEAvBA,wDAeA,oEAYA,CAAC,wEAOeC,EAAMC,EAAUC,OACjCC,EAAcD,EAASE,cACvBC,EAAuBH,EAASI,cAChCC,mIAAYC,KAAKC,WAAWC,iBAAiB,eAE9CC,UAAYN,OACZI,WAAWG,cACd,gBACAC,UAAYR,IAERS,QAAQ,YACRC,EAAIC,UAAUC,SAASd,KACrBa,UAAUE,IAAI,YAEdF,UAAUG,OAAO,YAIpBX,KAAKC,WAAWG,cAAc,wBACzBQ,KAEJtB,EAAeuB,waAxBfvB,WA+BVC,EAAUuB,OAAOxB"}