{"version":3,"file":"pfe-number.umd.js","sources":["pfe-number.js"],"sourcesContent":["import PFElement from '../pfelement/pfelement.js';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar numeral = createCommonjsModule(function (module) {\n/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(commonjsGlobal, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n});\n\n/*!\n * PatternFly Elements: PfeNumber 1.0.0\n * @license\n * Copyright 2019 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// easy aliases for common format strings\nconst types = {\n  abbrev: \"0a\", // or 'approx'?\n  ordinal: \"0o\",\n  percent: \"0%\",\n  bytes: \"0[.][00] ib\",\n  e: \"0[.00]e+0\",\n  thousands: \"0,0[.][00]\"\n};\n\n// use thin spaces to separate thousands chunks\n// debugger;\nnumeral.locales.en.delimiters.thousands = \" \";\n\nclass PfeNumber extends PFElement {\n  static get version() {\n    return \"1.0.0\";\n  }\n\n  get html() {\n    return `<style>:host{display:inline;white-space:nowrap}</style><span></span>`;\n  }\n  static get tag() {\n    return \"pfe-number\";\n  }\n\n  get styleUrl() {\n    return \"pfe-number.scss\";\n  }\n\n  get templateUrl() {\n    return \"pfe-number.html\";\n  }\n\n  static get observedAttributes() {\n    return [\"number\", \"format\", \"type\"];\n  }\n\n  constructor() {\n    super(PfeNumber);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.connected = true;\n\n    this._determineFormat();\n    this._setInitialNumber();\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    super.attributeChangedCallback(...arguments);\n    switch (attr) {\n      case \"type\":\n        this._determineFormat();\n        break;\n      case \"format\":\n        this._updateNumber(this.getAttribute(\"number\"), newVal);\n        break;\n      case \"number\":\n        this._updateNumber(newVal, this.getAttribute(\"format\"));\n    }\n  }\n\n  _setInitialNumber() {\n    const numberAttrDefined = !Number.isNaN(\n      parseFloat(this.getAttribute(\"number\"))\n    );\n    const numberContentDefined = !Number.isNaN(parseFloat(this.textContent));\n\n    if (numberAttrDefined) {\n      this.setAttribute(\"number\", this.getAttribute(\"number\"));\n    } else if (numberContentDefined) {\n      this.setAttribute(\"number\", this.textContent);\n    }\n  }\n\n  _determineFormat() {\n    let type = this.getAttribute(\"type\");\n\n    if (type && types[type]) {\n      this.setAttribute(\"format\", types[type]);\n    } else {\n      this.setAttribute(\"format\", this.getAttribute(\"format\") || \"0\");\n    }\n  }\n\n  _updateNumber(num, type) {\n    this.shadowRoot.querySelector(\"span\").textContent = this._format(num, type);\n  }\n\n  _format(num, type) {\n    return numeral(num).format(type);\n  }\n}\n\nPFElement.create(PfeNumber);\n//# sourceMappingURL=pfe-number.js.map\n"],"names":["commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","module","exports","numeral","factory","_","VERSION","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","length","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","locale","negP","optDec","leadingCount","abbr","trillion","billion","million","thousand","decimal","neg","abbrForce","abs","int","precision","signed","thousands","output","Math","includes","indexOf","RegExp","abbreviations","toString","split","toFixed","delimiters","slice","String","i","string","stringOriginal","abbreviation","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","arguments","multiplier","x","parts","correctionFactor","args","Array","prototype","call","accum","next","mn","maxDecimals","optionals","splitValue","minDecimals","boundedPrecision","optionalsRegExp","power","max","key","toLowerCase","localeData","Error","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","clone","inputString","formatFunction","round","set","add","corrFactor","cback","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","binary","allSuffixes","concat","filter","item","unformatRegex","bytes","suffix","bytesMultiplier","symbols","before","after","exponential","toExponential","num","hours","floor","minutes","seconds","timeArray","types","abbrev","percent","en","PfeNumber","connected","_determineFormat","_setInitialNumber","attr","oldVal","newVal","_updateNumber","getAttribute","numberAttrDefined","parseFloat","numberContentDefined","textContent","setAttribute","shadowRoot","querySelector","_format","PFElement","create"],"mappings":"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"}